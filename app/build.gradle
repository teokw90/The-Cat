apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.example.bestandroidcode"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BaseURL", '"https://api.thecatapi.com"'
        buildConfigField "String", "SharedPreferencesName", '"TheCat"'
        buildConfigField "String", "MyFavoriteCatList", '"MY_FAVORITE_CAT_LIST"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Android Jetpack
    debugImplementation "androidx.fragment:fragment-testing:$versions.androidxFragment"
    implementation "androidx.annotation:annotation:$versions.androidxAnnotation"
    implementation "androidx.appcompat:appcompat:$versions.androidxAppCompat"
    implementation "androidx.core:core-ktx:$versions.androidxCore"
    implementation "androidx.constraintlayout:constraintlayout:$versions.androidxConstraintLayout"
    implementation "androidx.legacy:legacy-support-v4:$versions.androidxLegacySupport"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.androidxLifecycle"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.androidxNavigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.androidxNavigation"
    implementation "androidx.recyclerview:recyclerview:$versions.androidxRecyclerView"

    // Dagger
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    // Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"

    // Google Material Design
    implementation "com.google.android.material:material:$versions.googleMaterialDesign"

    // Kotlinx Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinxCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinxCoroutines"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitGsonConverter"
}

// Test Library
dependencies {
    // Android Jetpack
    testImplementation "androidx.arch.core:core-testing:$versions.androidxArchTest"
    testImplementation "androidx.test:core-ktx:$versions.androidxCoreTest"
    testImplementation "androidx.test.ext:junit-ktx:$versions.androidxTestExtKotlinRunner"

    // Hamcrest
    testImplementation "org.hamcrest:hamcrest-all:$versions.hamcrest"

    // JUnit
    testImplementation "junit:junit:$versions.junit"

    // Kotlinx Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.kotlinxCoroutines"
}

// Android Test Library
dependencies {
    // Android Jetpack
    androidTestImplementation "androidx.arch.core:core-testing:$versions.androidxArchTest"
    androidTestImplementation "androidx.test.ext:junit-ktx:$versions.androidxTestExtKotlinRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"

    // JUnit
    androidTestImplementation "junit:junit:$versions.junit"

    // Kotlinx Coroutines
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.kotlinxCoroutines"
}